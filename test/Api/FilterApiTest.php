<?php
/**
 * FilterApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * imageapi
 *
 * Image Recognition and Processing APIs let you use Machine Learning to recognize and process images, and also perform useful image modification operations.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * FilterApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class FilterApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for filterBlackAndWhite
     *
     * Convert image to black-and-white grayscale.
     *
     */
    public function testFilterBlackAndWhite()
    {
    }

    /**
     * Test case for filterDespeckle
     *
     * Despeckle to remove point noise from the image.
     *
     */
    public function testFilterDespeckle()
    {
    }

    /**
     * Test case for filterEdgeDetect
     *
     * Detect and highlight edges in an image.
     *
     */
    public function testFilterEdgeDetect()
    {
    }

    /**
     * Test case for filterEmboss
     *
     * Emboss an image.
     *
     */
    public function testFilterEmboss()
    {
    }

    /**
     * Test case for filterGaussianBlur
     *
     * Perform a guassian blur on the input image.
     *
     */
    public function testFilterGaussianBlur()
    {
    }

    /**
     * Test case for filterMotionBlur
     *
     * Perform a motion blur on the input image.
     *
     */
    public function testFilterMotionBlur()
    {
    }

    /**
     * Test case for filterPosterize
     *
     * Posterize the image by reducing distinct colors.
     *
     */
    public function testFilterPosterize()
    {
    }

    /**
     * Test case for filterSwirl
     *
     * Swirl distort the image.
     *
     */
    public function testFilterSwirl()
    {
    }
}
